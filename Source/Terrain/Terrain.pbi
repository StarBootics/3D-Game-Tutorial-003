; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; AUTOMATICALLY GENERATED CODE, DO NOT MODIFY
; UNLESS YOU REALLY, REALLY, REALLY MEAN IT !!
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; Code generated by : Dev-Object - V2.0.0 Beta 7
; Project name : OpenGL 3D Game Tutorial
; File name : Terrain.pbi
; File Version : 0.0.0
; Programmation : In progress
; Programmed by : Guillaume Saumure
; AKA : StarBootics
; E-mail : gsaumure@cgocable.ca
; Creation Date : July 28th, 2022
; Last update : July 28th, 2022
; Coded for PureBasic : V6.00 LTS
; Platform : Windows, Linux, MacOS X
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; The MIT License (MIT)
; 
; Copyright (c) 2022 Guillaume Saumure
; 
; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
; associated documentation files (the "Software"), to deal in the Software without restriction, including 
; without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
; copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the 
; following conditions:
; 
; The above copyright notice and this permission notice shall be included in all copies or substantial 
; portions of the Software.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
; LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO 
; EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER 
; IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
; THE USE OR OTHER DEALINGS IN THE SOFTWARE.
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

DeclareModule Terrain
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Constants declaration <<<<<  
  
  #TILE_SIZE = 1000.0
  #VERTEX_COUNT = 125
  
  Interface Terrain
    
    GetTileCountX.l()
    GetTileCountZ.l()
    GetParams.i()
    GetMaterial.i()
    GetTerrainTiles.i()
    GetTerrainHeight.f(WorldPosX.f, WorldPosZ.f)
    SetTileCountX(TileCountX.l)
    SetTileCountZ(TileCountZ.l)
    SetParams(*Params.HeightsGeneratorParams::HeightsGeneratorParams)
    SetMaterial(*Material.Material::Material)
    SetTerrainTiles(*TerrainTiles.TerrainTile::TerrainTile)
    ClearTerrainTiles()
    ResetTerrainTiles()
    NextTerrainTiles.i()
    BuiltTerrainTiles()
    SendToGPU()
    FreeFromGPU()
    Free()
    
  EndInterface
  
  Declare.i New(TileCountX.l, TileCountZ.l, *Params.HeightsGeneratorParams::HeightsGeneratorParams)
  
EndDeclareModule

Module Terrain

  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Structure declaration <<<<<

  Structure Private_Members
    
    VirtualTable.i
    TileCountX.l
    TileCountZ.l
    *Params.HeightsGeneratorParams::HeightsGeneratorParams
    Material.Material::Material
    Map TerrainTiles.TerrainTile::TerrainTile(16)
    
  EndStructure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The observators <<<<<

  Procedure.l GetTileCountX(*This.Private_Members)
    
    ProcedureReturn *This\TileCountX
  EndProcedure
  
  Procedure.l GetTileCountZ(*This.Private_Members)
    
    ProcedureReturn *This\TileCountZ
  EndProcedure
  
  Procedure.i GetParams(*This.Private_Members)
    
    ProcedureReturn *This\Params
  EndProcedure
  
  Procedure.i GetMaterial(*This.Private_Members)
    
    ProcedureReturn *This\Material
  EndProcedure
  
  Procedure.i GetTerrainTiles(*This.Private_Members)
    
    ProcedureReturn *This\TerrainTiles()
  EndProcedure
  
  Procedure.f GetTerrainHeight(*This.Private_Members, WorldPosX.f, WorldPosZ.f)
    
    TileX.l = Int(Round(WorldPosX / #TILE_SIZE, #PB_Round_Down))
    TileZ.l = Int(Round(WorldPosZ / #TILE_SIZE, #PB_Round_Down))

    If FindMapElement(*This\TerrainTiles(), Str(TileX) + "-" + Str(TileZ))
      
      If *This\TerrainTiles()\FormatedGridCoords() = Str(TileX) + "-" + Str(TileZ)
        ProcedureReturn *This\TerrainTiles()\GetHeightOfTerrainTile(WorldPosX, WorldPosZ)
      EndIf
      
    Else
      ProcedureReturn 0.0
    EndIf
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The mutators <<<<<

  Procedure SetTileCountX(*This.Private_Members, TileCountX.l)
    
    *This\TileCountX = TileCountX
    
  EndProcedure
  
  Procedure SetTileCountZ(*This.Private_Members, TileCountZ.l)
    
    *This\TileCountZ = TileCountZ
    
  EndProcedure
  
  Procedure SetParams(*This.Private_Members, *Params.HeightsGeneratorParams::HeightsGeneratorParams)
    
    *This\Params = *Params
    
  EndProcedure
  
  Procedure SetMaterial(*This.Private_Members, *Material.Material::Material)
    
    If *This\Material <> #Null
      *This\Material\Free()
    EndIf
    
    *This\Material = *Material
    
  EndProcedure
  
  Procedure SetTerrainTiles(*This.Private_Members, *TerrainTiles.TerrainTile::TerrainTile)
    
    If *This\TerrainTiles() <> #Null
      *This\TerrainTiles()\Free()
    EndIf
    
    *This\TerrainTiles() = *TerrainTiles
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Clear map operator(s) <<<<<

  Procedure ClearTerrainTiles(*This.Private_Members)
    
    ForEach *This\TerrainTiles()
      If *This\TerrainTiles() <> #Null
        *This\TerrainTiles()\Free()
      EndIf
    Next
    
    ClearMap(*This\TerrainTiles())
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Reset map operator(s) <<<<<

  Procedure ResetTerrainTiles(*This.Private_Members)
    
    ResetMap(*This\TerrainTiles())
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Next map element operator(s) <<<<<

  Procedure.i NextTerrainTiles(*This.Private_Members)
    
    ProcedureReturn NextMapElement(*This\TerrainTiles())
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The BuiltTerrainTiles operator <<<<<
  
  Procedure BuiltTerrainTiles(*This.Private_Members)

    HeightsGenerator.HeightsGenerator::HeightsGenerator = HeightsGenerator::New(*This\Params)

    For TileX = 0 To *This\TileCountX - 1
      For TileZ = 0 To *This\TileCountZ - 1
        HeightsGenerator\CalculateOffset(TileX, TileZ, #VERTEX_COUNT)
        AddMapElement(*This\TerrainTiles(), Str(TileX) + "-" + Str(TileZ))
        *This\TerrainTiles() = TerrainTile::New(TileX, TileZ)
        *This\TerrainTiles()\Built(#VERTEX_COUNT, #TILE_SIZE, HeightsGenerator)
      Next
    Next
    
    HeightsGenerator\Free()
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The SendToGPU operator <<<<<
  
  Procedure SendToGPU(*This.Private_Members)
    
    ForEach *This\TerrainTiles()
      *This\TerrainTiles()\SendToGPU()
    Next
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The FreeFromGPU operator <<<<<
  
  Procedure FreeFromGPU(*This.Private_Members)
    
    ForEach *This\TerrainTiles()
      *This\TerrainTiles()\FreeFromGPU()
    Next
    
  EndProcedure
 
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Destructor <<<<<

  Procedure Free(*This.Private_Members)

    ForEach *This\TerrainTiles()
      If *This\TerrainTiles() <> #Null
        *This\TerrainTiles()\Free()
      EndIf
    Next
    
    FreeStructure(*This)
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Constructor <<<<<

  Procedure.i New(TileCountX.l, TileCountZ.l, *Params.HeightsGeneratorParams::HeightsGeneratorParams)
    
    *This.Private_Members = AllocateStructure(Private_Members)
    *This\VirtualTable = ?START_METHODS
    
    *This\TileCountX = TileCountX
    *This\TileCountZ = TileCountZ
    *This\Params = *Params
    *This\Material = Material::New()
    
    ProcedureReturn *This
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Virtual Table Entries <<<<<

  DataSection
    START_METHODS:
    Data.i @GetTileCountX()
    Data.i @GetTileCountZ()
    Data.i @GetParams()
    Data.i @GetMaterial()
    Data.i @GetTerrainTiles()
    Data.i @GetTerrainHeight()
    Data.i @SetTileCountX()
    Data.i @SetTileCountZ()
    Data.i @SetParams()
    Data.i @SetMaterial()
    Data.i @SetTerrainTiles()
    Data.i @ClearTerrainTiles()
    Data.i @ResetTerrainTiles()
    Data.i @NextTerrainTiles()
    Data.i @BuiltTerrainTiles()
    Data.i @SendToGPU()
    Data.i @FreeFromGPU()
    Data.i @Free()
    END_METHODS:
  EndDataSection
  
EndModule

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; <<<<< Code generated in : 00.001 seconds (186000.00 lines/second) <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<
; <<<<< END OF FILE <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<
; IDE Options = PureBasic 6.00 LTS (Linux - x64)
; Folding = -----
; EnableXP
; CompileSourceDirectory