; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; AUTOMATICALLY GENERATED CODE, DO NOT MODIFY
; UNLESS YOU REALLY, REALLY, REALLY MEAN IT !!
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; Code generated by : Dev-Object - V2.0.0 Beta 7
; Project name : OpenGL 3D Game Tutorial
; File name : TextureLoader.pbi
; File Version : 1.0.0
; Programmation : OK
; Programmed by : Guillaume Saumure
; AKA : StarBootics
; E-mail : gsaumure@cgocable.ca
; Creation Date : July 7th, 2022
; Last update : July 22nd, 2022
; Coded for PureBasic : V6.00 LTS
; Platform : Windows, Linux, MacOS X
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; The MIT License (MIT)
; 
; Copyright (c) 2022 Guillaume Saumure
; 
; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
; associated documentation files (the "Software"), to deal in the Software without restriction, including 
; without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
; copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the 
; following conditions:
; 
; The above copyright notice and this permission notice shall be included in all copies or substantial 
; portions of the Software.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
; LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO 
; EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER 
; IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
; THE USE OR OTHER DEALINGS IN THE SOFTWARE.
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

DeclareModule TextureLoader
  
  Interface TextureLoader
    
    GetGenerateMipMap.i()
    GetLodBias.f()
    SetGenerateMipMap(GenerateMipMap.i)
    SetLodBias(LodBias.f)
    LoadIt.l(FileName.s)
    Free()
    
  EndInterface
  
  Declare.i New(GenerateMipMap.i = #True, LodBias.f = -0.5)
  
EndDeclareModule

Module TextureLoader
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Structure declaration <<<<<

  Structure Private_Members
    
    VirtualTable.i
    GenerateMipMap.i
    LodBias.f
    
  EndStructure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The observators <<<<<

  Procedure.i GetGenerateMipMap(*This.Private_Members)
    
    ProcedureReturn *This\GenerateMipMap
  EndProcedure
  
  Procedure.f GetLodBias(*This.Private_Members)
    
    ProcedureReturn *This\LodBias
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The mutators <<<<<

  Procedure SetGenerateMipMap(*This.Private_Members, GenerateMipMap.i)
    
    *This\GenerateMipMap = GenerateMipMap
    
  EndProcedure
  
  Procedure SetLodBias(*This.Private_Members, LodBias.f)
    
    *This\LodBias = LodBias
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The LoadIt operator <<<<<  
  
  Procedure.l LoadIt(*This.Private_Members, FileName.s)

    If FileSize(FileName) > 0
      
      ImageHandle.i = LoadImage(#PB_Any, FileName)
      
      If ImageHandle <> 0
        
        Extension.s = GetExtensionPart(FileName)
        
        Width = ImageWidth(ImageHandle)
        Height = ImageHeight(ImageHandle)
        
        If StartDrawing(ImageOutput(ImageHandle))

          GL20::glGenTextures(1, @TextureID.l)
          
          GL30::glBindTexture(#GL_TEXTURE_2D, TextureID)
          
          Select Extension
              
            Case "bmp", "jpg"
              GL20::glTexImage2D(#GL_TEXTURE_2D, 0, #GL_RGB, Width, Height, 0, #GL_RGB, #GL_UNSIGNED_BYTE, DrawingBuffer())
              
            Case "png"
              
              Select DrawingBufferPixelFormat()
                  
                Case #PB_PixelFormat_24Bits_RGB
                  GL20::glTexImage2D(#GL_TEXTURE_2D, 0, #GL_RGB, Width, Height, 0, #GL_RGB, #GL_UNSIGNED_BYTE, DrawingBuffer())
                  
                Case #PB_PixelFormat_32Bits_RGB 
                  GL20::glTexImage2D(#GL_TEXTURE_2D, 0, #GL_RGBA, Width, Height, 0, #GL_RGBA, #GL_UNSIGNED_BYTE, DrawingBuffer())
                  
              EndSelect
              
          EndSelect
          
          If *This\GenerateMipMap = #True
            GL20::glGenerateMipmap(#GL_TEXTURE_2D)
            GL20::glTexParameteri(#GL_TEXTURE_2D, #GL_TEXTURE_MIN_FILTER, #GL_LINEAR_MIPMAP_LINEAR)
          Else
            GL20::glTexParameteri(#GL_TEXTURE_2D, #GL_TEXTURE_MIN_FILTER, #GL_LINEAR)
          EndIf
          
          GL20::glTexParameteri(#GL_TEXTURE_2D, #GL_TEXTURE_MAG_FILTER, #GL_LINEAR)
          GL20::glTexParameteri(#GL_TEXTURE_2D, #GL_TEXTURE_WRAP_S, #GL_REPEAT)
          GL20::glTexParameteri(#GL_TEXTURE_2D, #GL_TEXTURE_WRAP_T, #GL_REPEAT)
          
          If *This\GenerateMipMap = #True
            GL20::glTexParameterf(#GL_TEXTURE_2D, OGL::#GL_TEXTURE_LOD_BIAS, *This\LodBias)
          EndIf
          
          GL30::glBindTexture(#GL_TEXTURE_2D, 0)
          
          StopDrawing()
          
        EndIf
        
        FreeImage(ImageHandle)
        
      Else
        TextureID = -1
      EndIf
      
    EndIf
    
    ProcedureReturn TextureID
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Destructor <<<<<

  Procedure Free(*This.Private_Members)
    
    FreeStructure(*This)
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Constructor <<<<<

  Procedure.i New(GenerateMipMap.i = #True, LodBias.f = -0.5)
    
    *This.Private_Members = AllocateStructure(Private_Members)
    *This\VirtualTable = ?START_METHODS
    
    *This\GenerateMipMap = GenerateMipMap
    *This\LodBias = LodBias
    
    ProcedureReturn *This
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Virtual Table Entries <<<<<

  DataSection
    START_METHODS:
    Data.i @GetGenerateMipMap()
    Data.i @GetLodBias()
    Data.i @SetGenerateMipMap()
    Data.i @SetLodBias()
    Data.i @LoadIt()
    Data.i @Free()
    END_METHODS:
  EndDataSection
  
EndModule

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; <<<<< Code generated in : 00.001 seconds (135000.00 lines/second) <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<
; <<<<< END OF FILE <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<
; IDE Options = PureBasic 6.00 LTS (Linux - x64)
; Folding = ---
; EnableXP
; CompileSourceDirectory